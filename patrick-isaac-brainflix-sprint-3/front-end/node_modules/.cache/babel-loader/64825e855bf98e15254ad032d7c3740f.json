{"ast":null,"code":"import _classCallCheck from \"/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/src/components/UploadPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport '../global_css/uploadPage_css/styles.css';\nvar thumbnail = \"https://wallpapercave.com/wp/wc1748682.jpg\";\nvar url = \"http://localhost:8080/videos\";\n\nvar UploadPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadPage, _React$Component);\n\n  function UploadPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.uploadVideo = function () {\n      if (_this.titleInput.value < 2) axios.post(url, {\n        title: _this.titleInput.value,\n        description: _this.descriptionInput.value\n      }).then(function (response) {\n        _this.titleInput.value = \"\";\n        _this.descriptionInput.value = \"\";\n        alert(\"Video successfully uploaded\");\n      });\n    };\n\n    _this.cancelVideo = function () {\n      _this.titleInput.value = \"\";\n      _this.descriptionInput.value = \"\";\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"upload__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Upload Video\"), React.createElement(\"div\", {\n        className: \"upload__section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"upload__video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"VIDEO THUMBNAIL\"), React.createElement(\"img\", {\n        className: \"upload__thumbnail\",\n        src: thumbnail,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: \"upload__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"TITLE YOUR VIDEO\", React.createElement(\"input\", {\n        className: \"upload__title\",\n        type: \"text\",\n        placeholder: \"Add title to your video\",\n        ref: function ref(self) {\n          return _this2.titleInput = self;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \"ADD A VIDEO DESCRIPTION\", React.createElement(\"textarea\", {\n        className: \"upload__description\",\n        type: \"textarea\",\n        placeholder: \"Add a description to your video\",\n        ref: function ref(self) {\n          return _this2.descriptionInput = self;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"upload__publish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"publish__mobile\",\n        onClick: this.uploadVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"PUBLISH\"), React.createElement(\"h3\", {\n        onClick: this.cancelVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(\"button\", {\n        onClick: this.uploadVideo,\n        className: \"publish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"PUBLISH\")));\n    }\n  }]);\n\n  return UploadPage;\n}(React.Component);\n\nexport default UploadPage;","map":{"version":3,"sources":["/Users/patrickisaac/Desktop/BrainStation/wdft-2019/patrick-isaac-brainflix-project/patrick-isaac-brainflix-sprint-3/front-end/src/components/UploadPage.js"],"names":["React","axios","thumbnail","url","UploadPage","uploadVideo","titleInput","value","post","title","description","descriptionInput","then","response","alert","cancelVideo","self","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,yCAAP;AAEA,IAAMC,SAAS,GAAG,4CAAlB;AACA,IAAMC,GAAG,GAAG,8BAAZ;;IAEMC,U;;;;;;;;;;;;;;;;;;UAEJC,W,GAAc,YAAM;AAClB,UAAG,MAAKC,UAAL,CAAgBC,KAAhB,GAAwB,CAA3B,EACCN,KAAK,CAACO,IAAN,CAAWL,GAAX,EAAgB;AACdM,QAAAA,KAAK,EAAE,MAAKH,UAAL,CAAgBC,KADT;AAEdG,QAAAA,WAAW,EAAE,MAAKC,gBAAL,CAAsBJ;AAFrB,OAAhB,EAIEK,IAJF,CAIO,UAAAC,QAAQ,EAAI;AAChB,cAAKP,UAAL,CAAgBC,KAAhB,GAAwB,EAAxB;AACA,cAAKI,gBAAL,CAAsBJ,KAAtB,GAA8B,EAA9B;AACAO,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,OARF;AASF,K;;UAEDC,W,GAAc,YAAM;AAClB,YAAKT,UAAL,CAAgBC,KAAhB,GAAwB,EAAxB;AACA,YAAKI,gBAAL,CAAsBJ,KAAtB,GAA8B,EAA9B;AACD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,EAEA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAEL,SAAxC;AAAmD,QAAA,GAAG,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF,EAKE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEA;AACA,QAAA,SAAS,EAAC,eADV;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,yBAHZ;AAIA,QAAA,GAAG,EAAE,aAAAc,IAAI;AAAA,iBAAK,MAAI,CAACV,UAAL,GAAkBU,IAAvB;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,6BASA;AACA,QAAA,SAAS,EAAC,qBADV;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,WAAW,EAAC,iCAHZ;AAG8C,QAAA,GAAG,EAAE,aAAAA,IAAI;AAAA,iBAAK,MAAI,CAACL,gBAAL,GAAwBK,IAA7B;AAAA,SAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,CALF,CAFF,EAuBE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACA,QAAA,SAAS,EAAC,iBADV;AAEA,QAAA,OAAO,EAAE,KAAKX,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAKE;AAAI,QAAA,OAAO,EAAE,KAAKU,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,QAAA,OAAO,EAAE,KAAKV,WAAtB;AAAkC,QAAA,SAAS,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CAvBF,CADF;AAkCD;;;;EAvDsBL,KAAK,CAACiB,S;;AA0D/B,eAAeb,UAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport '../global_css/uploadPage_css/styles.css'\n\nconst thumbnail = \"https://wallpapercave.com/wp/wc1748682.jpg\"\nconst url = \"http://localhost:8080/videos\"\n\nclass UploadPage extends React.Component {\n\n  uploadVideo = () => {\n    if(this.titleInput.value < 2)\n     axios.post(url, {\n       title: this.titleInput.value,\n       description: this.descriptionInput.value\n      })\n      .then(response => {\n        this.titleInput.value = \"\"\n        this.descriptionInput.value = \"\"\n        alert(\"Video successfully uploaded\")\n      })\n  }\n\n  cancelVideo = () => {\n    this.titleInput.value = \"\"\n    this.descriptionInput.value = \"\"\n  }\n\n  render() {\n    return (\n      <div className=\"upload__container\">\n        <h1 className=\"title\">Upload Video</h1>\n        <div className=\"upload__section\">\n          <div className=\"upload__video\">\n          <h4>VIDEO THUMBNAIL</h4>\n          <img className=\"upload__thumbnail\" src={thumbnail} alt=\"\" />\n          </div>\n          <form className=\"upload__form\">\n          TITLE YOUR VIDEO\n          <input \n          className=\"upload__title\" \n          type=\"text\" \n          placeholder=\"Add title to your video\" \n          ref={self => (this.titleInput = self)}\n          />\n          ADD A VIDEO DESCRIPTION\n          <textarea \n          className=\"upload__description\" \n          type=\"textarea\" \n          placeholder=\"Add a description to your video\" ref={self => (this.descriptionInput = self)}\n          />\n          </form>\n        </div>\n        <div className=\"upload__publish\">\n          <button \n          className=\"publish__mobile\" \n          onClick={this.uploadVideo}>PUBLISH\n          </button>\n          <h3 onClick={this.cancelVideo}>CANCEL</h3>\n          <button onClick={this.uploadVideo}className=\"publish\">PUBLISH</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UploadPage;"]},"metadata":{},"sourceType":"module"}